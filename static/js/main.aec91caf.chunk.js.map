{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separate","Date","toDateString","url","fetchData","a","axios","get","modifiedData","fetchDailyData","map","date","reportDate","total","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aec91caf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1V40r\",\"card\":\"Cards_card__2tLSu\",\"infected\":\"Cards_infected__1Ro7b\",\"recovered\":\"Cards_recovered__3qMd3\",\"deaths\":\"Cards_deaths__3gFiv\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'; \r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed) {\r\n        return 'Loading Statistics...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\"> \r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={3} separate=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of total cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={3} separate=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={3} separate=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async() => {\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        }\r\n        return modifiedData;\r\n    }catch(error){\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        return data.map(({confirmed, deaths, reportDate: date}) => ({\r\n            confirmed: confirmed.total,\r\n            deaths: deaths.total,\r\n            date\r\n        }));\r\n    }catch(error){\r\n        return error;\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = () => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n            setDailyData(initialDailyData)\r\n        }\r\n        fetchAPI();\r\n    });\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (<Line data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: 'blue',\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Infected',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5',\r\n                fill: true,\r\n            }],\r\n        }} \r\n        />) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    );\r\n};\r\nexport default Chart;","import React from 'react';\r\n\r\nconst CountryPicker = () => {\r\n    return (\r\n        <h1>CountryPicker</h1>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className ={styles.container}>\r\n                <Cards data={this.state.data}/>\r\n                <Chart data={this.state.data}/>\r\n                <CountryPicker />\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__146jp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ZHrG\"};"],"sourceRoot":""}