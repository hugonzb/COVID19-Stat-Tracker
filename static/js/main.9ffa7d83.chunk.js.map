{"version":3,"sources":["App.module.css","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","App.js","index.js"],"names":["module","exports","CountryPicker","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separate","Date","toDateString","Chart","fetchData","a","axios","get","modifiedData","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,UAAY,yB,0OCOfC,EANO,WAClB,OACI,8CCuCOC,EArCD,SAAC,GAA0D,IAAD,IAAvDC,KAAOC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,WAClD,OAAIH,EAIA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAYC,KACnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKnB,EAAUoB,MAAOC,SAAU,EAAGC,SAAS,OAExF,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKpB,GAAYqB,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,4BAGR,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAYC,KACnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKlB,EAAUmB,MAAOC,SAAU,EAAGC,SAAS,OACxF,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKpB,GAAYqB,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0BAGR,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAYC,KACnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKjB,EAAOkB,MAAOC,SAAU,EAAGC,SAAS,OACrF,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKpB,GAAYqB,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wBA3BT,yBCAAQ,EAND,WACV,OACI,sC,kCCAKC,EAAS,uCAAG,wCAAAC,EAAA,+EAEoDC,IAAMC,IAJvE,kCAEa,2BAET9B,KAAQC,EAFC,EAEDA,UAAWC,EAFV,EAEUA,UAAWC,EAFrB,EAEqBA,OAAQC,EAF7B,EAE6BA,WACxC2B,EAAe,CACjB9B,YACAC,YACAC,SACAC,cAPa,kBASV2B,GATU,4FAAH,qDCuBPC,E,4MApBXC,MAAQ,CACJjC,KAAM,I,kMAIoB2B,I,OAApBO,E,OACNC,KAAKC,SAAS,CAACpC,KAAMkC,I,qIAGJC,KAAKF,MAAdjC,KACR,OACI,yBAAKK,UAAYC,IAAOC,WACpB,kBAAC,EAAD,CAAOP,KAAMmC,KAAKF,MAAMjC,OACxB,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAfEqC,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9ffa7d83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ZHrG\"};","import React from 'react';\r\n\r\nconst CountryPicker = () => {\r\n    return (\r\n        <h1>CountryPicker</h1>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'; \r\nimport CountUp from 'react-countup';\r\n\r\nimport styles from './Cards.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed) {\r\n        return 'Loading Statistics...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\"> \r\n                <Grid item component ={Card}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={3} separate=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={3} separate=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={3} separate=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\n\r\nconst Chart = () => {\r\n    return (\r\n        <h1>Chart</h1>\r\n    )\r\n}\r\n\r\nexport default Chart;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async() => {\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        }\r\n        return modifiedData;\r\n    }catch(error){\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className ={styles.container}>\r\n                <Cards data={this.state.data}/>\r\n                <Chart />\r\n                <CountryPicker />\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}