{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchApi","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cb97a60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1V40r\",\"card\":\"Cards_card__2tLSu\",\"infected\":\"Cards_infected__1Ro7b\",\"recovered\":\"Cards_recovered__3qMd3\",\"deaths\":\"Cards_deaths__3gFiv\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'; \r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed) {\r\n        return 'Loading Statistics...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\"> \r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={3} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of total cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={3} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={3} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeeableUrl = url;\r\n    if(country){\r\n        changeeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeeableUrl);\r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        }\r\n        return modifiedData;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        return data.map(({confirmed, deaths, reportDate: date}) => ({\r\n            confirmed: confirmed.total,\r\n            deaths: deaths.total,\r\n            date\r\n        }));\r\n    }catch(error){\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n            setDailyData(initialDailyData)\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (<Line data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: 'blue',\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Infected',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5',\r\n                fill: true,\r\n            }],\r\n        }} \r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'], \r\n                    datasets: [{\r\n                        labels: 'People', \r\n                        backgroundColor:['blue', 'green', 'red',\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]}}\r\n                options={{legend:{display: false, title:{display:true, text:'Displaying chart for ${country}'}}}}\r\n            \r\n            />\r\n        ) : null\r\n\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ( {handleCountryChange} ) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchApi = async() => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchApi();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue =\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                <option value=\"New Zealand\">New Zealand</option>\r\n                <option value=\"US\">United States</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value = {country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n} \r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className ={styles.container}>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__146jp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Ii0Q\",\"container\":\"CountryPicker_container__39iIm\",\"image\":\"CountryPicker_image__3q2JI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ZHrG\"};"],"sourceRoot":""}